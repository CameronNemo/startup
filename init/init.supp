# This is a valgrind suppressions file.

# As in libnih, we often use a heap-allocated list head to link all of
# the allocated structures such as the event queue or job list.  They
# are allocated the first time that we need them with the static *_init
# functions; valgrind complains because they are not freed before exit,
# as there's little point doing so.

{
   event-init
   Memcheck:Leak
   fun:malloc
   fun:realloc
   fun:nih_alloc_using
   fun:nih_alloc
   fun:nih_list_new
   fun:event_init
}

{
   job-class-init
   Memcheck:Leak
   fun:malloc
   fun:realloc
   fun:nih_alloc_using
   fun:nih_alloc
   fun:nih_hash_new
   fun:job_class_init
}

{
   notify-init
   Memcheck:Leak
   fun:malloc
   fun:realloc
   fun:nih_alloc_using
   fun:nih_alloc
   fun:nih_list_new
   fun:notify_init
}

{
   conf-init
   Memcheck:Leak
   fun:malloc
   fun:realloc
   fun:nih_alloc_using
   fun:nih_alloc
   fun:nih_list_new
   fun:conf_init
}

# job_run_process will leak its args member to children, knowing full
# well they will either exec() or exit()
{
   job-run-process-args
   Memcheck:Leak
   fun:realloc
   fun:_test_allocator
   fun:nih_realloc
   fun:nih_str_array_addp
   fun:nih_str_array_addn
   fun:nih_str_split
   fun:job_run_process
}
