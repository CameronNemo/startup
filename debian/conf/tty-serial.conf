# tty-serial - getty
#

description "Maintain a getty on last (by default) serial port given by 'console=' kernel argument"

start on runlevel [23] and (
            not-container or
            container CONTAINER=lxc or
            container CONTAINER=lxc-libvirt)

stop on runlevel [!23]

# change to 'yes' to have job start a getty on *first* 'console=' value
# instead of last.
env use_first=no

respawn

script
  # save for later
  OLD_IFS=$IFS

  for arg in $(cat /proc/cmdline)
  do
    case "$arg" in
      console=*)
        IFS=','
        set -- ${arg#console=}

        # no device specified
        [ -z "$1" ] && continue
      
        # handle braille devices
        [ "$1" = brl ] && shift
      
        # Extract device name, also handling scenario where user
        # specifies full path to device. Specifying a full path is oddly
        # not valid, but since it's a potentially common scenario, we
        # handle it.
        PORT=${1#/dev/}
        DEVICE="/dev/$PORT"
      
        # device doesn't exist
        [ ! -e "${DEVICE}" ] && continue
        
        # only allow authorized terminals
        grep -q "^${PORT}$" /etc/securetty || continue
        
        # device already has an associated job
        [ -f /etc/init/$PORT.conf ] && continue
      
        # invalid options specified
        options="$2"
        if [ -n "$options" ]; then
          echo "$options" | egrep -q "[0-9]{4,}(n|o|e)[0-9]r*" || continue
        fi
      
        # delimit options with commas for easier parsing
        options=$(echo "$options" | sed -r \
          -e 's/^([0-9]{4,})/\1,/g' \
          -e 's/(n|o|e)/\1,/g' \
          -e 's/(7|8)/\1,/g')
        IFS=','
        set -- $options
      
        SPEED="$1"
        PARITY="$2"
        BITS="$3"
        FLOW="$4"
      
        GETTY_ARGS=""
        
        [ -z "$SPEED" ] && SPEED='115200,57600,38400,19200,9600'
        [ -z "$BITS" ] && BITS=8
        [ -n "$BITS" -a "$BITS" -eq 8 ] && GETTY_ARGS="$GETTY_ARGS -8"
        [ -n "$FLOW" ] && GETTY_ARGS="$GETTY_ARGS --flow-control"

        # restore to ensure getty can parse options
        IFS=$OLD_IFS

        GETTY_ARGS="$GETTY_ARGS $SPEED $PORT"

        [ "$use_first" = yes ] && exec /sbin/getty $GETTY_ARGS
      ;;
    esac
  done

  [ -n "$GETTY_ARGS" ] && exec /sbin/getty $GETTY_ARGS
end script
