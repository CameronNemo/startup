=== modified file 'init/tests/test_cfgfile.c'
--- init/tests/test_cfgfile.c	2007-02-11 14:18:00 +0000
+++ init/tests/test_cfgfile.c	2007-02-13 15:49:59 +0000
@@ -127,7 +127,7 @@
 	job->state = JOB_RUNNING;
 	job->pid = 1000;
 
-	job->cause = (EventEmission *)&job;
+	job->cause = (void *)&job;
 
 	job->failed = TRUE;
 	job->failed_state = JOB_RUNNING;
@@ -165,7 +165,7 @@
 	TEST_EQ (job->state, JOB_RUNNING);
 	TEST_EQ (job->pid, 1000);
 
-	TEST_EQ_P (job->cause, (EventEmission *)&job);
+	TEST_EQ_P (job->cause, (void *)&job);
 
 	TEST_EQ (job->failed, TRUE);
 	TEST_EQ (job->failed_state, JOB_RUNNING);

=== modified file 'init/tests/test_job.c'
--- init/tests/test_job.c	2007-02-11 18:20:19 +0000
+++ init/tests/test_job.c	2007-02-13 15:48:08 +0000
@@ -2426,7 +2426,7 @@
 void
 test_run_process (void)
 {
-	Job           *job;
+	Job           *job = NULL;
 	EventEmission *em;
 	FILE          *output;
 	struct stat    statbuf;
@@ -2807,7 +2807,7 @@
 	 */
 	TEST_FEATURE ("with hard to kill process");
 	TEST_ALLOC_FAIL {
-		int wait_fd;
+		int wait_fd = 0;
 
 		job->goal = JOB_STOP;
 		job->state = JOB_KILLED;

=== modified file 'init/tests/test_notify.c'
--- init/tests/test_notify.c	2007-02-09 17:16:07 +0000
+++ init/tests/test_notify.c	2007-02-13 15:48:57 +0000
@@ -143,8 +143,8 @@
 	NotifySubscription *sub1, *sub2, *sub3, *sub4, *ret;
 
 	TEST_FUNCTION ("notify_subscription_find");
-	sub1 = notify_subscribe_job (NULL, 1000, (Job *)&sub1);
-	sub2 = notify_subscribe_event (NULL, 1001, (EventEmission *)&sub2);
+	sub1 = notify_subscribe_job (NULL, 1000, (void *)&sub1);
+	sub2 = notify_subscribe_event (NULL, 1001, (void *)&sub2);
 	sub3 = notify_subscribe_job (NULL, 1000, NULL);
 	sub4 = notify_subscribe_event (NULL, 1000, NULL);
 

=== modified file 'upstart/tests/test_message.c'
--- upstart/tests/test_message.c	2007-02-08 22:31:00 +0000
+++ upstart/tests/test_message.c	2007-02-13 15:47:13 +0000
@@ -739,7 +739,7 @@
 void
 test_handle (void)
 {
-	NihIoMessage *msg;
+	NihIoMessage *msg = NULL;
 	NihError     *err;
 	struct ucred  cred = { 1000, 1000, 1000 };
 	int           ret;
@@ -1981,7 +1981,7 @@
 void
 test_handle_using (void)
 {
-	NihIoMessage *msg;
+	NihIoMessage *msg = NULL;
 	struct ucred  cred = { 1000, 1000, 1000 };
 	int           ret;
 
@@ -2036,8 +2036,8 @@
 void
 test_reader (void)
 {
-	NihIo        *io;
-	NihIoMessage *msg;
+	NihIo        *io = NULL;
+	NihIoMessage *msg = NULL;
 	struct ucred  cred = { 2000, 1000, 1000 };
 
 	TEST_FUNCTION ("upstart_message_reader");

=== modified file 'util/tests/test_events.c'
--- util/tests/test_events.c	2007-02-08 02:57:56 +0000
+++ util/tests/test_events.c	2007-02-13 15:53:22 +0000
@@ -59,7 +59,7 @@
 	FILE         *output;
 	char         *args[4];
 	pid_t         pid;
-	int           ret, sock, status;
+	int           ret = 0, sock, status;
 
 
 	TEST_FUNCTION ("emit_action");

=== modified file 'util/tests/test_jobs.c'
--- util/tests/test_jobs.c	2007-02-09 21:10:45 +0000
+++ util/tests/test_jobs.c	2007-02-13 15:52:49 +0000
@@ -58,7 +58,7 @@
 	FILE         *output;
 	pid_t         pid;
 	char         *args[3];
-	int           ret, sock, status;
+	int           ret = 0, sock, status;
 
 
 	TEST_FUNCTION ("start_action");

